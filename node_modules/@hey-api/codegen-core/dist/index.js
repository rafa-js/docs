import {createRequire}from'module';import i from'node:path';createRequire(import.meta.url);
var d=class{map=new Map;reverse=new Map;delete(e){let t=this.map.get(e);return t!==void 0&&this.reverse.delete(t),this.map.delete(e)}deleteValue(e){let t=this.reverse.get(e);return t!==void 0&&this.map.delete(t),this.reverse.delete(e)}entries(){return this.map.entries()}get(e){return this.map.get(e)}getKey(e){return this.reverse.get(e)}hasKey(e){return this.map.has(e)}hasValue(e){return this.reverse.has(e)}keys(){return this.map.keys()}set(e,t){return this.map.set(e,t),this.reverse.set(t,e),this}get size(){return this.map.size}values(){return this.map.values()}[Symbol.iterator](){return this.map[Symbol.iterator]()}};var a=l=>`_heyapi_${l}_`,h=l=>l.slice(8,-1),u=()=>new RegExp(a("\\d+"),"g"),y=(l,e)=>l.replace(u(),t=>{let r=Number.parseInt(h(t),10);return e(r)||t});var m=class l{constructor(e,t,r={}){this.path=e;this.project=t;this.meta=r;let o=l.pathToFilePath(e);r.path&&(typeof r.path=="function"?o=r.path(o):o=r.path.replace("{{path}}",o)),this.id=t.incrementFileId(),this.path=o;}cache={};renderSymbols=[];state={exports:new Map,imports:new Map,symbols:new Map};id;resolvedNames=new d;addExport(e){return this.addImportExport(e,"exports")}addImport(e){return this.addImportExport(e,"imports")}addImportExport(e,t){let r=this.getImportExportKey(e),o=this.state[t].get(r);e.names||(e.names=[]);for(let s of e.typeNames??[])e.names.includes(s)||(e.names=[...e.names,s]);o?(this.mergeImportExportValues(o,e),this.state[t].set(r,o)):this.state[t].set(r,{...e}),this.cache[t]=void 0;}addRenderSymbol(e){this.renderSymbols.push(e),this.cache.symbols=void 0;}addSymbol(e){let t=this.project.incrementSymbolId(),r={...e,file:this,id:t,placeholder:a(String(t)),update:o=>this.updateSymbol(t,o)};return r.value===void 0?r.headless=true:r.headless||delete r.headless,this.state.symbols.set(t,r),this.project.registerSymbol(r,this),r.headless||this.addRenderSymbol(t),r}ensureSymbol(e){return this.selectSymbolFirst(e.selector)||this.addSymbol({name:"",...e})}get exports(){return this.cache.exports||(this.cache.exports=Array.from(this.state.exports.values())),this.cache.exports}getAllSymbols(){return [...this.symbols,...this.imports.flatMap(e=>(e.names??[]).map(t=>({name:e.aliases?.[t]??t}))),...this.exports.flatMap(e=>(e.names??[]).map(t=>({name:e.aliases?.[t]??t})))]}getImportExportKey(e){return typeof e.from=="string"?e.from:e.from.path}getSymbolById(e){return this.state.symbols.get(e)}hasContent(){return this.state.exports.size>0||this.symbols.length>0}hasSymbol(e){return this.state.symbols.has(e)}get imports(){return this.cache.imports||(this.cache.imports=Array.from(this.state.imports.values())),this.cache.imports}mergeImportExportValues(e,t){e.aliases={...e.aliases,...t.aliases},t.defaultImport!==void 0&&(e.defaultImport=t.defaultImport),e.names=[...new Set([...e.names??[],...t.names??[]])],t.namespaceImport!==void 0&&(e.namespaceImport=t.namespaceImport),t.typeDefaultImport!==void 0&&(e.typeDefaultImport=t.typeDefaultImport),e.typeNames=[...new Set([...e.typeNames??[],...t.typeNames??[]])],t.typeNamespaceImport!==void 0&&(e.typeNamespaceImport=t.typeNamespaceImport);}static pathToFilePath(e){return e.includes("/")?e.split("/").filter(Boolean).join(i.sep):e.includes("\\")?e.split("\\").filter(Boolean).join(i.sep):e.split(i.sep).filter(Boolean).join(i.sep)}relativePathFromFile(e){let t=i.posix.relative(i.posix.dirname(e.path),this.path);return t.startsWith(".")||(t=`./${t}`),t}relativePathToFile(e){let t=i.posix.relative(i.posix.dirname(this.path.split(i.sep).join("/")),e.path.split(i.sep).join("/"));return !t.startsWith(".")&&t!==""&&(t=`./${t}`),t}selectSymbolAll(e){return this.project.selectSymbolAll(e,this)}selectSymbolFirst(e){return this.project.selectSymbolFirst(e,this)}selectSymbolFirstOrThrow(e){return this.project.selectSymbolFirstOrThrow(e,this)}selectSymbolLast(e){return this.project.selectSymbolLast(e,this)}get symbols(){return this.cache.symbols||(this.cache.symbols=this.renderSymbols.map(e=>this.getSymbolById(e))),this.cache.symbols}updateSymbol(e,t){let r=this.getSymbolById(e);if(!r)throw new Error(`symbol with id ${e} not found`);let o={...r,...t,id:e};return (!o.headless||o.value)&&delete o.headless,this.state.symbols.set(o.id,o),r.headless&&!o.headless&&this.addRenderSymbol(e),o}};var I=class{fileId=0;fileIdToFile=new Map;fileOrder=[];filePathToFileId=new Map;renderers=new Map;selectorToSymbolIds=new Map;symbolId=0;symbolIdToFileId=new Map;addExport(e,t){this.ensureFile(e).addExport(t);}addImport(e,t){this.ensureFile(e).addImport(t);}addSymbol(e,t){return this.ensureFile(e).addSymbol(t)}createFile(e,t={}){let{renderer:r,...o}=t;r&&this.ensureRenderer(r);let s=this.getFileByPath(e);if(s)return r?.id&&r.id!==s.meta.renderer&&(s.meta.renderer=r.id),s;let n=new m(e,this,{...o,renderer:r?.id});return this.fileOrder.push(n),this.filePathToFileId.set(e,n.id),this.fileIdToFile.set(n.id,n),n}ensureFile(e){if(typeof e!="string")return e;let t=this.getFileByPath(e);return t||this.createFile(e)}ensureRenderer(e){return this.renderers.has(e.id)||this.renderers.set(e.id,e),this.renderers.get(e.id)}get files(){return [...this.fileOrder]}getAllSymbols(){return this.fileOrder.flatMap(e=>e.getAllSymbols())}getFileByPath(e){let t=this.filePathToFileId.get(e);return t!==void 0?this.fileIdToFile.get(t):void 0}getFileBySymbolId(e){let t=this.symbolIdToFileId.get(e);return t!==void 0?this.fileIdToFile.get(t):void 0}getFileRenderer(e){return e.meta.renderer?this.renderers.get(e.meta.renderer):void 0}getSymbolById(e){return this.getFileBySymbolId(e)?.getSymbolById(e)}incrementFileId(){return this.fileId++}incrementSymbolId(){return this.symbolId++}registerSymbol(e,t){if(this.symbolIdToFileId.set(e.id,t.id),e.selector){let r=JSON.stringify(e.selector),o=this.selectorToSymbolIds.get(r)??[];o.push(e.id),this.selectorToSymbolIds.set(r,o);}}render(e){let t=[];return this.fileOrder.forEach((r,o)=>{let s=this.getFileRenderer(r);s&&(t[o]={content:s.renderSymbols(r,e),meta:r.meta,path:`${r.path}${r.meta.extension??""}`});}),this.fileOrder.forEach((r,o)=>{let s=this.getFileRenderer(r);if(!s||!t[o])return;let n=s.renderHeader(r,e),p=y(t[o].content,g=>s.replacerFn({file:r,symbolId:g}));t[o].content=`${n}${p}`;}),t.filter(Boolean)}selectSymbolAll(e,t){let r=this.selectorToSymbolIds.get(JSON.stringify(e))??[],o=[];for(let s of r){let n=this.getFileBySymbolId(s);if(!n||t&&t!==n)continue;let p=n.getSymbolById(s);p&&o.push(p);}return o}selectSymbolFirst(e,t){return this.selectSymbolAll(e,t)[0]}selectSymbolFirstOrThrow(e,t){let r=this.selectSymbolFirst(e,t);if(!r)throw new Error(`symbol for selector not found: ${JSON.stringify(e)}`);return r}selectSymbolLast(e,t){let r=this.selectSymbolAll(e,t);return r[r.length-1]}};export{d as BiMap,m as CodegenFile,I as CodegenProject,y as replaceWrappedIds};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map