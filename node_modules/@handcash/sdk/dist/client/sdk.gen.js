// This file is auto-generated by @hey-api/openapi-ts
import { client as _heyApiClient } from './client.gen.js';
export class Connect {
    /**
     * Get a current user profile
     */
    static getCurrentUserProfile(options) {
        return (options?.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/profile/currentUserProfile',
            ...options
        });
    }
    /**
     * Get user profiles
     */
    static getPublicUserProfiles(options) {
        return (options.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/profile/publicUserProfiles',
            ...options
        });
    }
    /**
     * Get users permissions
     */
    static getPermissions(options) {
        return (options?.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/profile/permissions',
            ...options
        });
    }
    /**
     * Retrieve the BSV exchange rate in the specified currency.
     */
    static getExchangeRate(options) {
        return (options.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/exchangeRate/{currencyCode}',
            ...options
        });
    }
    /**
     * Get a legacy deposit address
     */
    static getDepositAddress(options) {
        return (options?.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/address',
            ...options
        });
    }
    /**
     * Retrieve wallet balances.
     */
    static getBalances(options) {
        return (options?.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/balances',
            ...options
        });
    }
    /**
     * Retrieve wallets spendable balances.
     */
    static getSpendableBalances(options) {
        return (options?.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/spendableBalances',
            ...options
        });
    }
    /**
     * Make a payment
     */
    static pay(options) {
        return (options.client ?? _heyApiClient).post({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/pay',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    /**
     * Retrieve details for a specific payment.
     */
    static getPaymentDetails(options) {
        return (options.client ?? _heyApiClient).get({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/payment',
            ...options
        });
    }
    /**
     * Get items inventory
     */
    static getItemsInventory(options) {
        return (options.client ?? _heyApiClient).post({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/items/inventory',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
}
//# sourceMappingURL=sdk.gen.js.map