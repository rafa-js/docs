export type AccountFullPublicProfilesSchema = {
    items: Array<{
        id: string;
        handle: string;
        paymail: string;
        displayName?: string;
        avatarUrl?: string;
        localCurrencyCode: string;
        /**
         * @deprecated
         */
        bitcoinUnit?: string;
        createdAt: string;
    }>;
};
export type AccountFullUserProfileSchema = {
    publicProfile?: {
        id: string;
        handle: string;
        paymail: string;
        displayName?: string;
        avatarUrl?: string;
        localCurrencyCode: string;
        /**
         * @deprecated
         */
        bitcoinUnit?: string;
        createdAt: string;
    };
    privateProfile?: {
        email?: string;
        /**
         * @deprecated
         */
        phoneNumber?: '';
    };
};
export type ConnectPermissionsSchema = {
    items: Array<'USER_PRIVATE_PROFILE' | 'USER_PUBLIC_PROFILE' | 'PAY' | 'READ_BALANCE' | 'GENERATE_ADDRESS' | 'READ_TRANSACTIONS' | 'ITEMS_READ' | 'ITEMS_WRITE'>;
    appId: string;
};
export type ItemsItemsSchema = {
    items?: Array<{
        id: string;
        origin?: string;
        user?: {
            id: string;
            alias: string;
            displayName: string;
            profilePictureUrl: string;
        };
        collection?: {
            id: string;
            isFeatured: boolean;
            origin: string;
            name: string;
            attributes?: Array<{
                [key: string]: unknown;
            }>;
            description: string;
            imageUrl: string;
            totalQuantity: number;
            isHandcashCreated: boolean;
            isVerified: boolean;
            isVisibleInMarket: boolean;
            app?: {
                id: string;
                name?: string;
                iconUrl?: string;
            };
        } | {
            id?: string;
        };
        app?: {
            id: string;
            name?: string;
            iconUrl?: string;
        };
        name: string;
        groupingValue: string;
        description: string;
        imageUrl: string;
        multimediaUrl: string;
        multimediaType: string;
        rarity: string;
        color: string;
        attributes?: Array<{
            name: string;
            value?: string | number;
            displayType: string;
        }>;
        isHandcashCreated: boolean;
        isVerified: boolean;
        isListing: boolean;
        itemListing?: {
            id: string;
            status: string;
            paymentRequestUrl: string;
            paymentRequestId: string;
            price: number;
            currencyCode: string;
            denominatedIn: string;
            fiatEquivalent?: {
                amount: number;
                currencyCode: string;
            };
            listedAt: string;
        };
        count: number;
        royalties?: Array<{
            type: string;
            percentage: number;
            destination: string;
        }>;
        actions?: Array<{
            name: string;
            description: string;
            url: string;
            enabled: boolean;
        }>;
        isCurrentUser: boolean;
        floorPriceInUsd?: number;
        lastSoldPriceInUsd?: number;
        externalId?: string;
        priceAlert?: {
            amountInUSD: number;
            groupingValue: string;
            itemName: string;
            contentUrl: string;
            collectionName: string;
            appName: string;
            active?: boolean;
        };
    }>;
};
export type MiscExchangeRateSchema = {
    exchangeRateVersion: string;
    rate: number;
    fiatSymbol: string;
    estimatedExpireDate: string;
};
export type WalletAddressSchema = {
    base58Address: string;
    publicKey?: string;
};
export type WalletBalancesSchema = {
    items?: Array<{
        currency?: {
            code: string;
            logoUrl: string;
            symbol: string;
        };
        units: number;
        fiatEquivalent?: {
            currencyCode: string;
            units: number;
        };
    }>;
};
export type WalletSpendableBalancesSchema = {
    items?: Array<{
        spendableBalance: number;
        currencyCode: string;
    }>;
};
export type WalletTransactionRecordSchema = {
    transactionId: string;
    type: string;
    time: number;
    note: string;
    currency?: {
        code: string;
        logoUrl: string;
        symbol: string;
    };
    units: number;
    satoshiFees: number;
    fiatEquivalent?: {
        currencyCode: string;
        units: number;
    };
    participants?: Array<{
        id: string;
        type: string;
        alias?: string;
        displayName: string;
        profilePictureUrl: string;
        responseNote: string;
        tags?: Array<string>;
    }>;
    attachments?: Array<{
        format: string;
        value: unknown;
    }>;
    app?: {
        name: string;
        iconUrl: string;
    };
    item?: {
        imageUrl: string;
        name: string;
        collectionName: string;
        origin: string;
        groupingValue: string;
    };
};
export type GetCurrentUserProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/profile/currentUserProfile';
};
export type GetCurrentUserProfileResponses = {
    /**
     * OK
     */
    200: AccountFullUserProfileSchema;
};
export type GetCurrentUserProfileResponse = GetCurrentUserProfileResponses[keyof GetCurrentUserProfileResponses];
export type GetPublicUserProfilesData = {
    body?: never;
    path?: never;
    query: {
        aliases: Array<string>;
    };
    url: '/v3/connect/profile/publicUserProfiles';
};
export type GetPublicUserProfilesResponses = {
    /**
     * OK
     */
    200: AccountFullPublicProfilesSchema;
};
export type GetPublicUserProfilesResponse = GetPublicUserProfilesResponses[keyof GetPublicUserProfilesResponses];
export type GetPermissionsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/profile/permissions';
};
export type GetPermissionsResponses = {
    /**
     * OK
     */
    200: ConnectPermissionsSchema;
};
export type GetPermissionsResponse = GetPermissionsResponses[keyof GetPermissionsResponses];
export type GetExchangeRateData = {
    body?: never;
    path: {
        currencyCode: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL';
    };
    query?: never;
    url: '/v3/connect/exchangeRate/{currencyCode}';
};
export type GetExchangeRateResponses = {
    /**
     * OK
     */
    200: MiscExchangeRateSchema;
};
export type GetExchangeRateResponse = GetExchangeRateResponses[keyof GetExchangeRateResponses];
export type GetDepositAddressData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/address';
};
export type GetDepositAddressResponses = {
    /**
     * OK
     */
    200: WalletAddressSchema;
};
export type GetDepositAddressResponse = GetDepositAddressResponses[keyof GetDepositAddressResponses];
export type GetBalancesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/balances';
};
export type GetBalancesResponses = {
    /**
     * OK
     */
    200: WalletBalancesSchema;
};
export type GetBalancesResponse = GetBalancesResponses[keyof GetBalancesResponses];
export type GetSpendableBalancesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/spendableBalances';
};
export type GetSpendableBalancesResponses = {
    /**
     * OK
     */
    200: WalletSpendableBalancesSchema;
};
export type GetSpendableBalancesResponse = GetSpendableBalancesResponses[keyof GetSpendableBalancesResponses];
export type PayData = {
    body: {
        exchangeRateVersion?: string;
        instrumentCurrencyCode: 'MNEE' | 'BSV';
        denominationCurrencyCode?: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL';
        note?: string;
        attachment?: {
            format: 'hex' | 'base64' | 'json' | 'hexArray';
            value?: {
                [key: string]: never;
            } | Array<string> | string;
        };
        receivers?: Array<{
            sendAmount: number;
            destination: string;
            tags?: Array<string>;
        }> | Array<{
            sendAmount: number;
            destination: string;
            tags?: Array<string>;
        }>;
    };
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/pay';
};
export type PayResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};
export type PayResponse = PayResponses[keyof PayResponses];
export type GetPaymentDetailsData = {
    body?: never;
    path?: never;
    query: {
        transactionId: string;
    };
    url: '/v3/connect/wallet/payment';
};
export type GetPaymentDetailsResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};
export type GetPaymentDetailsResponse = GetPaymentDetailsResponses[keyof GetPaymentDetailsResponses];
export type GetItemsInventoryData = {
    body: {
        from?: number;
        to?: number;
        collectionIds?: Array<string>;
        searchString?: string;
        groupingValue?: string;
        fetchAttributes?: boolean;
        sort?: 'name';
        order?: 'asc' | 'desc';
        attributes?: Array<{
            name: string;
            displayType: 'string' | 'number';
            operation?: 'equal' | 'includes' | 'matches' | 'greater' | 'lower' | 'greaterOrEqual' | 'lowerOrEqual';
            value?: string | number;
            values?: Array<string | number>;
        }>;
        group?: boolean;
        externalId?: string;
    };
    path?: never;
    query?: never;
    url: '/v3/connect/items/inventory';
};
export type GetItemsInventoryResponses = {
    /**
     * OK
     */
    200: ItemsItemsSchema;
};
export type GetItemsInventoryResponse = GetItemsInventoryResponses[keyof GetItemsInventoryResponses];
export type ClientOptions = {
    baseUrl: 'https://cloud.handcash.io' | (string & {});
};
//# sourceMappingURL=types.gen.d.ts.map